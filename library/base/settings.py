"""
Django settings for library project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(BASE_DIR)
TEMPLATE_DIR = os.path.join(BASE_DIR, "templates")
ALLAUTH_DIR = os.path.join(TEMPLATE_DIR, "django-allauth")

STATIC_DIR = os.path.join(BASE_DIR, "static")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '())(8x=n5$cdy(alwsxib^6fpsc^acael2u#&f1#p72%5%23-q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = ['127.0.0.1',  # Localhost ip address (should not need this often, only with runserver)
                 '172.16.4.11',  # server ip address (main one to use)
                 'domain.com'  # Any additional websites I may need
                 ]
# for debug toolbar to show it on my computer as well
INTERNAL_IPS = ('10.3.3.22', '127.0.0.1/')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # # django-allauth
    # 'django.contrib.sites',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # # Providers I want to use
    # # NONE FOR NOW

    # 'django_filters',  # django-filter


    # # Toolbar
    'debug_toolbar',
    # # Bootstrap for nicer forms
    # 'bootstrap4',
    # 'crispy_forms',
    # 'widget_tweaks',

    # # dark mode for django
    # 'dark',


    # My Apps
    'catalogue',
    'profiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Toolbar
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR, ALLAUTH_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'base.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    STATIC_DIR,
]

# This is where we store the media files
MEDIA_ROOT = os.path.join(BASE_DIR, "static/media/images/")

# This defines and lets us access those urls
MEDIA_URL = '/images/'

# Email Settings
# EMAIL_HOST = 'smtp.volunteerwales.org'
# EMAIL_PORT = ''
# EMAIL_HOST_USER = ''
# EMAIL_HOST_PASSWORD = ''
# EMAIL_USE_TLS = False
# EMAIL_USE_SSL = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
# EMAIL_HOST_USER = ''
# EMAIL_HOST_PASSWORD = ''
EMAIL_USE_SSL = True
# DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

###################################
# ------------------------------- #
# ----Django Date Time Format---- #
# ------------------------------- #
###################################

LANGUAGE_CODE = 'en-uk'

TIME_ZONE = 'GMT'

DATETIME_FORMAT = 'j N Y, P'   # Correct the DateTime Format

DATETIME_INPUT_FORMATS = [
    '%d/%m/%Y %H:%M:%S',     # '10/25/2006 14:30:59'
    '%d/%m/%Y %H:%M:%S.%f',  # '10/25/2006 14:30:59.000200'
    '%d/%m/%Y %H:%M',        # '10/25/2006 14:30'
    '%d/%m/%Y',              # '10/25/2006'
    '%d/%m/%y %H:%M:%S',     # '10/25/06 14:30:59'
    '%d/%m/%y %H:%M:%S.%f',  # '10/25/06 14:30:59.000200'
    '%d/%m/%y %H:%M',        # '10/25/06 14:30'
    '%d/%m/%y',              # '10/25/06'
]

USE_I18N = False
USE_L10N = False
USE_TZ = True

##########################
# ---------------------- #
# ----django-allauth---- #
# ---------------------- #
##########################


# Authentication backend for django-allauth
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

# site id, also for django-allauth
SITE_ID = 1

# EMAIL SETUP

# Email and account required = True
# ACCOUNT_EMAIL_VERIFICATION = 'none'
# ACCOUNT_CONFIRM_EMAIL_ON_GET = True
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_USERNAME_REQUIRED = True


# --- initial setup --- #
# 1. in settings.py you need to find all usages of "library" with "Match Case" and "Words" enabled,
# #  --- there should only be 3 of them
# 2. Do the same in project urls.py and wsgi.py and manage.py, there should be only one occurrence in both


# --- how to start a new app --- #

# 1. django-admin startapp "app"
# 2. Add the app to installed apps
# 2. import the app into project urls
# 3. add url to project urls, add this "path('app/', include('app.urls', namespace="app")),"
# 4. Create a urls.py in the app, and and this to the file:
# #  from django.urls import path
# #
# # app_name = 'organisers' -> whatever the name of the app is
# #
# # urlpatterns = [
# # ]
